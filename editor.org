unAudicle issue tracking

* BUGS
** FIXED
   :VISIBILITY: folded

*** DONE When creating new revision, old revision not preserved.
    The fix works like this:
    Before you undo the parent buffer, disconnect textChanged() signal.
    Then after you undo, you can reconnect it.
*** DONE Bugs with gridlayout when getting rid of shreds.
    This is not a bug anymore, we don't use the gridLayout-based anymore.
*** DONE We lose focus after creating the new buffers.
    Calling setActiveSubWindow() after creating window does the trick.
*** DONE When we don't have focus, the shredding function doesn't work.
    We use the subWindowList with stacking order to get top window.
*** DONE After creating a new revision, selection in tree widget does not follow.
    created a signal in codeArea, selectedRevision, and connected it to shredTree
*** DONE Indented items too-far indented past next columns.
    This was fixed by expanding the columns if they overflow.
    Then you have to scroll, but this is relatively painless.
**** One idea to fix this was custom renderer that alters indent system.
     Though this appears to be difficult, easy event logic in QTreeViewPrivate.
**** Another idea is just changing global indent to scale widest range.
     This would have the advantage of working well with filtering techniques.
*** DONE File, New Buffer doesn't actually work yet. It should.
    First pass for this done.
    
** Inactive
   :VISIBILITY: folded
*** TODO After creating a few revisions and shredding them,
    text in buffer does not match the text that successfully shredded.
    Not sure if this bug still exists.


** TODO Tab gives tab character, change to spaces

** TODO When starting a new file, it assumes it is *.sc
   Then doesn't allow Save As (does it?) and henceforth assumes SC
   for the commands, then doesn't get to chuck VM/chulos.

** TODO No feedback from OSC commands,
   no way to know state of connection, what happened with command.

** DONE crashing bug
   Open a file, close the editor window, open another file,
   then select the previous file via the tree.
** TODO non-crashing bug
   Open a file, close the editor window, reopen file.
   you get another revision version. (or just open same file twice)
** TODO (ChucK) short lived shreds bubbles stay around
   And if you click on them they don't go away.
** TODO on Mac, 10th shred doesn't show up (maybe display error)
** TODO on other Windows machine
   Code is reaching Supercollider fine, but UA not getting messages.
   editor was failing to bind already-bound port 7001.
*** DONE report this error condition in startup somehow
    Should print on stdout.
*** TODO make the editor port easily configurable
** TODO File->New automatically makes a .ck file

** TODO Text size should be preserved when making new revisions

* Feature Ideas

** TODO Have source lines accumulate stats/state
   Number of times executed, time in execution, etc

** TODO Add some sort of status window.

** TODO Add automatic running of chuck plus libraries, 
   perhaps through the magic of scripting?

** DONE Support Supercollider (through OSC over UDP)
*** TODO bug: file selector for open file only has *.ck files as option
*** TODO change name of shred file action

** Automatically delete empty sessions.
** TODO Save information for replaying a session.
   This would be great.
   Also just to load the session with the revision tree,
   to be able to replay parts of it.
** Make a shred action "fadeOut".
** Extend and use the macro system (maybe with arg macros)
   to support global variable declarations in chuck.
** DONE Try to make a signals and slots way to interact with tree viz.
** TODO Try using FileDrop to run chuck --add from command line.
** TODO Or support other file formats by adding a command string.

** TODO Do some sort of interactive search on revision text.

** Adapt the code and add to SCIDE as a docklet.
   Instead of tracking changes to buffers, can record each executed block,
   then bringing them up in a new buffer, associated with the process.

** Inactive
*** TODO Make a better revision tree visualization.
**** Try implementing the ordered tree layout algorithm in trees.pdf.
     To do this I think we need a queryable model.
     This is on hold for now, better prioratize other features.

* New Ideas
** Track changes since spork/ or diffs. Show novel edits, 
   maybe on a line, maybe viz. Show edit/code volumes.
** Show volume/frequency from each shred. 
   Highness/lowness from spectral centroid.

* Stupid Feature Ideas
** Make a configurable splash screen.
